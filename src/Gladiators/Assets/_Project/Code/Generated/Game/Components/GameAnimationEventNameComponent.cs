//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnimationEventName;

    public static Entitas.IMatcher<GameEntity> AnimationEventName {
        get {
            if (_matcherAnimationEventName == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnimationEventName);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnimationEventName = matcher;
            }

            return _matcherAnimationEventName;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Gladiators.Gameplay.Animation.AnimationEventName animationEventName { get { return (Gladiators.Gameplay.Animation.AnimationEventName)GetComponent(GameComponentsLookup.AnimationEventName); } }
    public string AnimationEventName { get { return animationEventName.Value; } }
    public bool hasAnimationEventName { get { return HasComponent(GameComponentsLookup.AnimationEventName); } }

    public GameEntity AddAnimationEventName(string newValue) {
        var index = GameComponentsLookup.AnimationEventName;
        var component = (Gladiators.Gameplay.Animation.AnimationEventName)CreateComponent(index, typeof(Gladiators.Gameplay.Animation.AnimationEventName));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceAnimationEventName(string newValue) {
        var index = GameComponentsLookup.AnimationEventName;
        var component = (Gladiators.Gameplay.Animation.AnimationEventName)CreateComponent(index, typeof(Gladiators.Gameplay.Animation.AnimationEventName));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveAnimationEventName() {
        RemoveComponent(GameComponentsLookup.AnimationEventName);
        return this;
    }
}
