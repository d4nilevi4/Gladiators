//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherHumanoidLocomotionAnimator;

    public static Entitas.IMatcher<GameEntity> HumanoidLocomotionAnimator {
        get {
            if (_matcherHumanoidLocomotionAnimator == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.HumanoidLocomotionAnimator);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherHumanoidLocomotionAnimator = matcher;
            }

            return _matcherHumanoidLocomotionAnimator;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Gladiators.Gameplay.Animation.HumanoidLocomotionAnimatorComponent humanoidLocomotionAnimator { get { return (Gladiators.Gameplay.Animation.HumanoidLocomotionAnimatorComponent)GetComponent(GameComponentsLookup.HumanoidLocomotionAnimator); } }
    public Gladiators.Gameplay.Animation.HumanoidLocomotionAnimator HumanoidLocomotionAnimator { get { return humanoidLocomotionAnimator.Value; } }
    public bool hasHumanoidLocomotionAnimator { get { return HasComponent(GameComponentsLookup.HumanoidLocomotionAnimator); } }

    public GameEntity AddHumanoidLocomotionAnimator(Gladiators.Gameplay.Animation.HumanoidLocomotionAnimator newValue) {
        var index = GameComponentsLookup.HumanoidLocomotionAnimator;
        var component = (Gladiators.Gameplay.Animation.HumanoidLocomotionAnimatorComponent)CreateComponent(index, typeof(Gladiators.Gameplay.Animation.HumanoidLocomotionAnimatorComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceHumanoidLocomotionAnimator(Gladiators.Gameplay.Animation.HumanoidLocomotionAnimator newValue) {
        var index = GameComponentsLookup.HumanoidLocomotionAnimator;
        var component = (Gladiators.Gameplay.Animation.HumanoidLocomotionAnimatorComponent)CreateComponent(index, typeof(Gladiators.Gameplay.Animation.HumanoidLocomotionAnimatorComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveHumanoidLocomotionAnimator() {
        RemoveComponent(GameComponentsLookup.HumanoidLocomotionAnimator);
        return this;
    }
}
